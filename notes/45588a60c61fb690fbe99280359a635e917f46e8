6   Exercises

    1. su What constraints are required to correctly parse word sequences
       like I am happy and she is happy but not *you is happy or *they am
       happy? Implement two solutions for the present tense paradigm of
       the verb be in English, first taking Grammar
       [https://www.nltk.org/book/ch09.html#ex-agcfg1](6) as your starting
       point, and then taking Grammar
       [https://www.nltk.org/book/ch09.html#ex-agr2](18) as the starting
       point.
    2. su Develop a variant of grammar in
       [https://www.nltk.org/book/ch09.html#code-feat0cfg]1.1 that uses a
       feature count to make the distinctions shown below:

   (54)

   a.

   The boy sings.

       b.

   *Boy sings.

   (55)

   a.

   The boys sing.

       b.

   Boys sing.

   (56)

   a.

   The boys sing.

       b.

   Boys sing.

   (57)

   a.

   The water is precious.

       b.

   Water is precious.
    3. su Write a function subsumes() which holds of two feature
       structures fs1 and fs2 just in case fs1 subsumes fs2.
    4. su Modify the grammar illustrated in
       [https://www.nltk.org/book/ch09.html#ex-subcatgpsg](28) to
       incorporate a bar feature for dealing with phrasal projections.
    5. su Modify the German grammar in
       [https://www.nltk.org/book/ch09.html#code-germancfg]3.2 to
       incorporate the treatment of subcategorization presented in
       [https://www.nltk.org/book/ch09.html#sec-extending-a-feature-based-
       grammar]3.
    6. 0R Develop a feature based grammar that will correctly describe the
       following Spanish noun phrases:
       System Message: ERROR/3 (ch09.rst2, line 2028)
       Error in "gloss" directive: may contain a single table only.
       System Message: ERROR/3 (ch09.rst2, line 2033)
       Error in "gloss" directive: may contain a single table only.
       System Message: ERROR/3 (ch09.rst2, line 2038)
       Error in "gloss" directive: may contain a single table only.
       System Message: ERROR/3 (ch09.rst2, line 2043)
       Error in "gloss" directive: may contain a single table only.
    7. 0R Develop your own version of the EarleyChartParser which only
       prints a trace if the input sequence fails to parse.
    8. 0R Consider the feature structures shown in
       [https://www.nltk.org/book/ch09.html#code-featstructures]6.1.


fs1 = nltk.FeatStruct("[A = ?x, B= [C = ?x]]")
fs2 = nltk.FeatStruct("[B = [D = d]]")
fs3 = nltk.FeatStruct("[B = [C = d]]")
fs4 = nltk.FeatStruct("[A = (1)[B = b], C->(1)]")
fs5 = nltk.FeatStruct("[A = (1)[D = ?x], C = [E -> (1), F = ?x] ]")
fs6 = nltk.FeatStruct("[A = [D = d]]")
fs7 = nltk.FeatStruct("[A = [D = d], C = [F = [D = d]]]")
fs8 = nltk.FeatStruct("[A = (1)[D = ?x, G = ?x], C = [B = ?x, E -> (1)] ]")
fs9 = nltk.FeatStruct("[A = [B = b], C = [E = [G = e]]]")
fs10 = nltk.FeatStruct("[A = (1)[B = b], C -> (1)]")

   [https://www.nltk.org/book/pylisting/code_featstructures.py]Example 6.1
   (code_featstructures.py): Figure 6.1: Exploring Feature Structures
       Work out on paper what the result is of the following unifications.
       (Hint: you might find it useful to draw the graph structures.)
         1. fs1 and fs2
         2. fs1 and fs3
         3. fs4 and fs5
         4. fs5 and fs6
         5. fs5 and fs7
         6. fs8 and fs9
         7. fs8 and fs10
       Check your answers using Python.
    9. 0R List two feature structures that subsume [A=?x, B=?x].
   10. 0R Ignoring structure sharing, give an informal algorithm for
       unifying two feature structures.
   11. 0R Extend the German grammar in
       [https://www.nltk.org/book/ch09.html#code-germancfg]3.2 so that it
       can handle so-called verb-second structures like the following:

       (58)

   Heute sieht der Hund die Katze.
   12. 0R Seemingly synonymous verbs have slightly different syntactic
       properties
       [https://www.nltk.org/book/bibliography.html#levin1993](Levin,
       1993). Consider the patterns of grammaticality for the verbs
       loaded, filled, and dumped below. Can you write grammar productions
       to handle such data?

   (59)

   a.

   The farmer loaded the cart with sand

       b.

   The farmer loaded sand into the cart

       c.

   The farmer filled the cart with sand

       d.

   *The farmer filled sand into the cart

       e.

   *The farmer dumped the cart with sand

       f.

   The farmer dumped sand into the cart
   13. * Morphological paradigms are rarely completely regular, in the
       sense of every cell in the matrix having a different realization.
       For example, the present tense conjugation of the lexeme walk only
       has two distinct forms: walks for the 3rd person singular, and walk
       for all other combinations of person and number. A successful
       analysis should not require redundantly specifying that 5 out of
       the 6 possible morphological combinations have the same
       realization. Propose and implement a method for dealing with this.
   14. * So-called head features are shared between the parent node and
       head child. For example, TENSE is a head feature that is shared
       between a VP and its head V child. See
       [https://www.nltk.org/book/bibliography.html#gazdar1985gps](Gazdar,
       Klein, & and, 1985) for more details. Most of the features we have
       looked at are head features -- exceptions are SUBCAT and SLASH.
       Since the sharing of head features is predictable, it should not
       need to be stated explicitly in the grammar productions. Develop an
       approach that automatically accounts for this regular behavior of
       head features.
   15. * Extend NLTK's treatment of feature structures to allow
       unification into list-valued features, and use this to implement an
       HPSG-style analysis of subcategorization, whereby the SUBCAT of a
       head category is the concatenation its complements' categories with
       the SUBCAT value of its immediate parent.
   16. * Extend NLTK's treatment of feature structures to allow
       productions with underspecified categories, such as S[-INV] --> ?x
       S/?x.
   17. * Extend NLTK's treatment of feature structures to allow typed
       feature structures.
   18. * Pick some grammatical constructions described in
       [https://www.nltk.org/book/bibliography.html#huddleston2002cge](Hud
       dleston & Pullum, 2002), and develop a feature based grammar to
       account for them.

   About this document...

   UPDATED FOR NLTK 3.0. This is a chapter from Natural Language
   Processing with Python, by [http://stevenbird.net/]Steven Bird,
   [http://homepages.inf.ed.ac.uk/ewan/]Ewan Klein and
   [http://ed.loper.org/]Edward Loper, Copyright © 2019 the authors. It is
   distributed with the Natural Language Toolkit [http://nltk.org/],
   Version 3.0, under the terms of the Creative Commons
   Attribution-Noncommercial-No Derivative Works 3.0 United States License
   [[http://creativecommons.org/licenses/by-nc-nd/3.0/us/]http://creativec
   ommons.org/licenses/by-nc-nd/3.0/us/].

   This document was built on Wed 4 Sep 2019 11:40:48 ACST
